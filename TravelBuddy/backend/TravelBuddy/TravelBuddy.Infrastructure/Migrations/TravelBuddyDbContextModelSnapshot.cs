// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddy.Infrastructure;

#nullable disable

namespace TravelBuddy.Infrastructure.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    partial class TravelBuddyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TravelBuddy.Domain.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ItineraryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("ItineraryId");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("TravelBuddy.Domain.Entities.Itinerary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Itinerary");

                    b.HasCheckConstraint("CK_Itinerary_Date", "Date >= GETDATE()");
                });

            modelBuilder.Entity("TravelBuddy.Domain.Entities.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Trips");

                    b.HasCheckConstraint("CK_Trip_Date", "Date >= GETDATE()");
                });

            modelBuilder.Entity("TravelBuddy.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("LastLoggedIn")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastName")
                        .HasMaxLength(40)
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasCheckConstraint("CK_User_Created", "Created >= GETDATE()");
                });

            modelBuilder.Entity("TripUser", b =>
                {
                    b.Property<int>("GuestsId")
                        .HasColumnType("int");

                    b.Property<int>("InvitedToTripsId")
                        .HasColumnType("int");

                    b.HasKey("GuestsId", "InvitedToTripsId");

                    b.HasIndex("InvitedToTripsId");

                    b.ToTable("TripUser", (string)null);
                });

            modelBuilder.Entity("TravelBuddy.Domain.Entities.Activity", b =>
                {
                    b.HasOne("TravelBuddy.Domain.Entities.Itinerary", "Itinerary")
                        .WithMany("Activities")
                        .HasForeignKey("ItineraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Itinerary");
                });

            modelBuilder.Entity("TravelBuddy.Domain.Entities.Itinerary", b =>
                {
                    b.HasOne("TravelBuddy.Domain.Entities.Trip", "Trip")
                        .WithMany("Itineraries")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddy.Domain.Entities.Trip", b =>
                {
                    b.HasOne("TravelBuddy.Domain.Entities.User", "Creator")
                        .WithMany("CreatedTrips")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("TripUser", b =>
                {
                    b.HasOne("TravelBuddy.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("GuestsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddy.Domain.Entities.Trip", null)
                        .WithMany()
                        .HasForeignKey("InvitedToTripsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TravelBuddy.Domain.Entities.Itinerary", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("TravelBuddy.Domain.Entities.Trip", b =>
                {
                    b.Navigation("Itineraries");
                });

            modelBuilder.Entity("TravelBuddy.Domain.Entities.User", b =>
                {
                    b.Navigation("CreatedTrips");
                });
#pragma warning restore 612, 618
        }
    }
}
